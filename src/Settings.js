import React from 'react';

// Settings Component will receive profile state values and setter functions as props
const Settings = ({
  sportType, setSportType,
  sportGoal, setSportGoal,
  sportLevel, setSportLevel,
  daysPerWeek, setDaysPerWeek,
  workoutDuration, setWorkoutDuration,
  liftingGoal, setLiftingGoal,
  trackerBrand, setTrackerBrand, // NEW PROP: trackerBrand
  equipment, setEquipment // This is the object for checkboxes
}) => {

  // Function to handle changes in equipment checkboxes
  const handleEquipmentChange = (e) => {
    const { name, checked } = e.target;
    setEquipment(prevEquipment => ({
      ...prevEquipment,
      [name]: checked // Update the specific equipment item's boolean value
    }));
  };

  return (
    <section className="bg-white p-6 md:p-8 rounded-2xl shadow-lg border border-blue-100 font-inter">
      <h2 className="text-2xl md:text-3xl font-extrabold text-indigo-800 mb-4 tracking-tight">Your Sport Profile Settings</h2>
      <p className="text-gray-700 mb-6 leading-relaxed text-base">Set your long-term sport profile, lifting goals, and available equipment here. These settings significantly influence the personalized workouts generated by the AI.</p>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-5">
        {/* Sport Type */}
        <div>
          <label htmlFor="sportType" className="block text-gray-700 font-medium mb-1.5 text-sm">Primary Sport Focus:</label>
          <select
            id="sportType"
            value={sportType}
            onChange={(e) => setSportType(e.target.value)}
            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition duration-150 ease-in-out text-base appearance-none bg-white pr-8 cursor-pointer"
          >
            <option value="Swimming">Swimming</option>
            <option value="Running">Running</option>
            <option value="Cycling">Cycling</option>
          </select>
        </div>
        {/* Primary Sport Goal */}
        <div>
          <label htmlFor="sportGoal" className="block text-gray-700 font-medium mb-1.5 text-sm">Primary Sport Goal:</label>
          <select
            id="sportGoal"
            value={sportGoal}
            onChange={(e) => setSportGoal(e.target.value)}
            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition duration-150 ease-in-out text-base appearance-none bg-white pr-8 cursor-pointer"
          >
            <option value="Improve Endurance">Improve Endurance</option>
            <option value="Increase Speed/Power">Increase Speed/Power</option>
            <option value="Technique Refinement">Technique Refinement</option>
            <option value="Event Preparation">Event Preparation</option>
            <option value="General Fitness">General Fitness</option>
          </select>
        </div>
        {/* Your Sport Level */}
        <div>
          <label htmlFor="sportLevel" className="block text-gray-700 font-medium mb-1.5 text-sm">Your Sport Level:</label>
          <select
            id="sportLevel"
            value={sportLevel}
            onChange={(e) => setSportLevel(e.target.value)}
            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition duration-150 ease-in-out text-base appearance-none bg-white pr-8 cursor-pointer"
          >
            <option value="Beginner">Beginner</option>
            <option value="Intermediate">Intermediate</option>
            <option value="Advanced">Advanced</option>
          </select>
        </div>
        {/* Workout Days Per Week */}
        <div>
          <label htmlFor="daysPerWeek" className="block text-gray-700 font-medium mb-1.5 text-sm">Workout Days Per Week (Main Sport):</label>
          <input
            type="number"
            id="daysPerWeek"
            value={daysPerWeek}
            onChange={(e) => setDaysPerWeek(Number(e.target.value))}
            min="1"
            max="7"
            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition duration-150 ease-in-out text-base"
          />
        </div>
        {/* Workout Duration */}
        <div>
          <label htmlFor="workoutDuration" className="block text-gray-700 font-medium mb-1.5 text-sm">Workout Duration (minutes per session):</label>
          <input
            type="number"
            id="workoutDuration"
            value={workoutDuration}
            onChange={(e) => setWorkoutDuration(Number(e.target.value))}
            min="15"
            step="5"
            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition duration-150 ease-in-out text-base"
          />
        </div>
         {/* Lifting Goal */}
         <div>
          <label htmlFor="liftingGoal" className="block text-gray-700 font-medium mb-1.5 text-sm">Complimentary Lifting Goal:</label>
          <select
            id="liftingGoal"
            value={liftingGoal}
            onChange={(e) => setLiftingGoal(e.target.value)}
            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition duration-150 ease-in-out text-base appearance-none bg-white pr-8 cursor-pointer"
          >
            <option value="None">None</option>
            <option value="Strength Training">Strength Training</option>
            <option value="Power Development">Power Development</option>
            <option value="Muscular Endurance">Muscular Endurance</option>
            <option value="Injury Prevention">Injury Prevention</option>
            <option value="General Conditioning">General Conditioning</option>
          </select>
        </div>
        {/* Tracker Brand */} {/* NEW INPUT */}
        <div>
          <label htmlFor="trackerBrand" className="block text-gray-700 font-medium mb-1.5 text-sm">Fitness Tracker Brand:</label>
          <select
            id="trackerBrand"
            value={trackerBrand}
            onChange={(e) => setTrackerBrand(e.target.value)}
            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition duration-150 ease-in-out text-base appearance-none bg-white pr-8 cursor-pointer"
          >
            <option value="No Watch">No Watch</option>
            <option value="Fitbit">Fitbit</option>
            <option value="Garmin">Garmin</option>
            <option value="Apple Watch">Apple Watch</option>
            <option value="Samsung">Samsung (Galaxy Watch)</option>
            <option value="Google">Google (Wear OS)</option>
            <option value="Other">Other (Just Resting HR)</option>
          </select>
        </div>
      </div> {/* End of grid for general settings */}

      {/* Equipment Checkboxes */}
      <div className="mt-10">
        <h3 className="text-xl font-bold text-gray-800 mb-4 border-b-2 pb-2 border-gray-200">Available Equipment:</h3>
        <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 sm:gap-6">
          {Object.keys(equipment).map((key) => (
            <div key={key} className="flex items-center p-2 rounded-lg bg-gray-100 border border-gray-200 shadow-sm hover:bg-gray-200 transition-colors duration-200">
              <input
                type="checkbox"
                id={key}
                name={key}
                checked={equipment[key]}
                onChange={handleEquipmentChange}
                className="h-5 w-5 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500 transition-colors duration-200 cursor-pointer"
              />
              <label htmlFor={key} className="ml-3 text-gray-700 capitalize font-medium text-base cursor-pointer">
                {key.replace(/([A-Z])/g, ' $1').trim()}
              </label>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Settings;